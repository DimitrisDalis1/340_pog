lvalue -> id
const -> INT
primary -> const
term -> primary
expr -> term
assignexpr -> lvalue = expr
expr -> assignexpr
stmt -> expr;
stmts -> stmt
lvalue -> id
const -> INT
primary -> const
term -> primary
expr -> term
assignexpr -> lvalue = expr
expr -> assignexpr
stmt -> expr;
stmts -> stmts stmt
lvalue -> id
const -> INT
primary -> const
term -> primary
expr -> term
assignexpr -> lvalue = expr
expr -> assignexpr
stmt -> expr;
stmts -> stmts stmt
funcname -> ID
funcprefix -> FUNCTION funcname
M -> NULL
idlist ->  
funcargs -> funcprefix M ( idlist )
funcblockstart -> NULL
lvalue -> id
const -> STRING
primary -> const
term -> primary
expr -> term
elist -> expr
normcall -> ( elist )
callsuffix -> normcall
call -> lvalue callsuffix
primary -> call
term -> primary
expr -> term
stmt -> expr;
stmts -> stmt
block -> { stmts }
funcdef -> funcargs funcblockstart block
funcblockend -> NULL
funcdef -> funcblockend
stmt -> funcdef
stmts -> stmts stmt
program -> stmt(asteraki)
